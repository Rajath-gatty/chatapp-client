[{"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\index.js":"1","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\App.js":"2","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Context\\Context.js":"3","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Login.js":"4","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Error.js":"5","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Signup.js":"6","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Home.js":"7","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Chat.js":"8","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Reducer\\actions.js":"9","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Reducer\\reducer.js":"10","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Nav.js":"11","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Sidebar.js":"12","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Room.js":"13","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Message.js":"14","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\hooks\\useFetch.js":"15","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Profile.js":"16","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\MultiSidebar.js":"17","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\NewChat.js":"18","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\NewGroup.js":"19","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\util\\DelayUnmount.js":"20","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\ChatBanner.js":"21","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\util\\socket.js":"22"},{"size":393,"mtime":1665901580917,"results":"23","hashOfConfig":"24"},{"size":1501,"mtime":1666410927066,"results":"25","hashOfConfig":"24"},{"size":3406,"mtime":1666411574362,"results":"26","hashOfConfig":"24"},{"size":4187,"mtime":1666496192230,"results":"27","hashOfConfig":"24"},{"size":112,"mtime":1609817555323,"results":"28","hashOfConfig":"24"},{"size":5135,"mtime":1666495646312,"results":"29","hashOfConfig":"24"},{"size":2032,"mtime":1666406218144,"results":"30","hashOfConfig":"24"},{"size":8589,"mtime":1666494643698,"results":"31","hashOfConfig":"24"},{"size":890,"mtime":1666411041389,"results":"32","hashOfConfig":"24"},{"size":2592,"mtime":1666411326935,"results":"33","hashOfConfig":"24"},{"size":692,"mtime":1666496246229,"results":"34","hashOfConfig":"24"},{"size":6623,"mtime":1666369598836,"results":"35","hashOfConfig":"24"},{"size":2214,"mtime":1666368689483,"results":"36","hashOfConfig":"24"},{"size":1628,"mtime":1666368125988,"results":"37","hashOfConfig":"24"},{"size":855,"mtime":1665718343940,"results":"38","hashOfConfig":"24"},{"size":5881,"mtime":1666494652214,"results":"39","hashOfConfig":"24"},{"size":1222,"mtime":1666494511854,"results":"40","hashOfConfig":"24"},{"size":2870,"mtime":1666407319696,"results":"41","hashOfConfig":"24"},{"size":333,"mtime":1665829589208,"results":"42","hashOfConfig":"24"},{"size":545,"mtime":1665894125245,"results":"43","hashOfConfig":"24"},{"size":694,"mtime":1666243208909,"results":"44","hashOfConfig":"24"},{"size":117,"mtime":1666342377883,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"69scfc",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\index.js",[],["96","97"],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\App.js",["98"],"import React,{useLayoutEffect} from \"react\";\nimport { Route, BrowserRouter, Switch  } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport Login from \"./Pages/Login\";\nimport Signup from \"./Pages/Signup\";\nimport Home from \"./Pages/Home\";\nimport Error from \"./Pages/Error\";\nimport { useGlobalContext } from \"./Context/Context\";\n\nfunction App() {\nconst {setAuthenticated,token,darkMode,setThemeMode} = useGlobalContext();\n\nuseLayoutEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user){\n        setAuthenticated(user.user,user.token);\n    }\n    const mode = JSON.parse(localStorage.getItem(\"darkMode\"));\n    if(mode) {\n        setThemeMode(true);\n    } else {\n        localStorage.setItem(\"darkMode\",JSON.stringify(false));\n    }\n},[])\n\naxios.defaults.headers.common[\"Authorization\"] = token;\n\n    return (\n        <div className=\"App\" \n        style={{background: darkMode ? \"var(--dark-conv-color)\" : \"var(--grey-color)\"}}>\n            <BrowserRouter>\n            <Switch>\n                <Route path=\"/login\">\n                    <Login />\n                </Route>\n                <Route path=\"/signup\">\n                    <Signup />\n                </Route>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"*\">\n                    <Error />\n                </Route>\n            </Switch>\n                </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Context\\Context.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Login.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Error.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Signup.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Pages\\Home.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Chat.js",["99"],"import {useEffect,useState,useRef} from \"react\";\r\nimport {\r\n    AccountCircle,\r\n    Search,\r\n    MoreVert,\r\n    Mic,\r\n    SentimentVerySatisfied,\r\n    AttachFile,\r\n} from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport Message from \"./Message\";\r\nimport {useGlobalContext} from \"../Context/Context\";\r\nimport axios from \"axios\";\r\nimport {io} from \"socket.io-client\";\r\n\r\nlet socket;\r\nfunction Chat() {\r\n    const [message,setMessage] = useState(\"\");\r\n    const [messages,setMessages] = useState([]);\r\n    const [socketCon,setSocketCon] = useState(false);\r\n    const [typing,setTyping] = useState(false);\r\n\r\n    const scrollRef = useRef(null);\r\n    const {selectedChat,user,updateSelectedChat,setConversationId,darkMode} = useGlobalContext();\r\n    \r\n    useEffect(() => {\r\n        socket = io(axios.defaults.baseURL);\r\n        socket.emit(\"join\",{userId:user._id,roomId:selectedChat.room._id});\r\n        socket.on(\"connected\",(userId) => {\r\n            console.log(\"connected\",userId);\r\n            setSocketCon(true);\r\n        })\r\n\r\n        socket.on('send-message',data => {\r\n            console.log(data);\r\n            setMessages(prevState => [...prevState,data]);\r\n        })\r\n\r\n\r\n        return () => {\r\n            socket.close();\r\n        }\r\n    },[selectedChat.room._id,user._id])\r\n\r\n    useEffect(() => {\r\n        if(!socketCon) return;\r\n        let timeout;\r\n        socket.on('isTyping',() => {\r\n            setTyping(true);\r\n            timeout = setTimeout(() => {\r\n                setTyping(false);\r\n            }, 2000);\r\n        })\r\n        return () => clearTimeout(timeout);\r\n    })\r\n\r\n    const handleMessageChange = (e) => {\r\n        if(!socketCon) return;\r\n        socket.emit('typing',selectedChat.room._id);\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMessages([]);\r\n        console.log('UseEffect Called to Fetch messages');\r\n        const fetchMessages = async () => {\r\n            try {\r\n                console.log('Fetching Messages...',selectedChat.room._id);\r\n                const res = await axios.post(\"api/user/messages\",{conversationId:selectedChat.room._id});\r\n   \r\n                setMessages(res.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        if(!selectedChat.newChat){\r\n            fetchMessages();\r\n        }\r\n    },[selectedChat.room._id]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior:\"smooth\"});\r\n    },[messages])\r\n\r\n    const handleMessageSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if(message.trim().length<=0){\r\n                return;\r\n            } else {\r\n                const data = {\r\n                    id:selectedChat.room._id,\r\n                    content:message,\r\n                    newChat:selectedChat.newChat\r\n                }\r\n                const res = await axios.post('api/user/postMessage',data);\r\n\r\n                if(res.status===200) {\r\n                        if(selectedChat.newChat){\r\n                            updateSelectedChat();\r\n                            setConversationId(res.data._id);\r\n                        }\r\n                }\r\n                setMessage(\"\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrapper darkMode={darkMode}>\r\n            <div className=\"chat__header\">\r\n                <div className=\"avatar\">\r\n                    <IconButton>\r\n                        {!selectedChat.room.profileUrl?\r\n                        <AccountCircle style={{ fontSize: 40 }} />:\r\n                        <img src={selectedChat.room.profileUrl} alt=\"profile\" className=\"img\"/>}\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"room\">\r\n                    <h2 className=\"title\">{selectedChat.room?.group?selectedChat.room.groupName:selectedChat.room.name}</h2>\r\n                    {typing&&<p>Typing...</p>}\r\n                    {selectedChat.room?.group&&<p className=\"members\">\r\n                        Rajath, nishan, suhas, jeevan, awais\r\n                    </p>}\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <IconButton>\r\n                        <Search />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <section className=\"chat__body__wrapper\">\r\n              <div className=\"chat__box_wrapper\">\r\n                <div className=\"chat__body__bg\">\r\n                {messages.map(msg => {\r\n                    return <div ref={scrollRef}>\r\n                    <Message \r\n                    key={msg._id} \r\n                    darkMode={darkMode}\r\n                    text={msg.content} \r\n                    date={msg.createdAt}\r\n                    own={msg.senderId===user._id}/>\r\n                </div>\r\n                })\r\n                }\r\n                </div>\r\n                </div>\r\n                <div className=\"enter__message__Wrapper\">\r\n                    <div className=\"bottom_icons\">\r\n                        <IconButton>\r\n                            <SentimentVerySatisfied />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <AttachFile />\r\n                        </IconButton>\r\n                    </div>\r\n                    <form onSubmit={handleMessageSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Type a message\"\r\n                            name=\"messageInput\"\r\n                            onChange={handleMessageChange}\r\n                            value={message}\r\n                        />\r\n                    </form>\r\n                    <IconButton>\r\n                        <Mic />\r\n                    </IconButton>\r\n                </div>\r\n            </section>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n    flex: 0.7;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n\r\n    .chat__body__wrapper {\r\n        background: ${({darkMode}) => darkMode ? \"#0B141A\" : \"var(--chat-bg)\"};\r\n        position: relative;\r\n        height: 90%;\r\n    }\r\n\r\n    .chat__box_wrapper {\r\n        ::-webkit-scrollbar {\r\n        width: 5px;\r\n        }\r\n\r\n        ::-webkit-scrollbar-track {\r\n        /* background: #f2f2f2; */\r\n        background:transparent;\r\n        }\r\n        \r\n        ::-webkit-scrollbar-thumb {\r\n        background:${({darkMode}) => darkMode ? \"rgba(181, 181, 181,0.2)\" : \"#8a8a8a\"};\r\n        }\r\n        \r\n        ::-webkit-scrollbar-thumb:hover {\r\n        background:  ${({darkMode}) => darkMode ? \"var(--dark-grey-color)\" : \"#a3a3a3\"};\r\n        }\r\n        overflow-y: auto;\r\n        max-height: 88%;\r\n        width: 100%;\r\n    }\r\n\r\n    .chat__body__bg {\r\n        padding: 10px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: 850px;\r\n        margin: auto;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .chat__header {\r\n        display: flex;\r\n        align-items: center;\r\n        background: ${({darkMode}) => darkMode ? \"var(--dark-grey-color)\" : \"var(--grey-color)\"};\r\n    }\r\n\r\n    .img {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n    }\r\n    .room {\r\n        flex: 1;\r\n    }\r\n    .room p {\r\n        font-size: 0.8rem;\r\n        color: ${({darkMode}) => darkMode ? \"#e8e8e8\" : \"#a5a5a5\"};\r\n    }\r\n    .room h2 {\r\n        font-weight: 500;\r\n        font-size: 17px;\r\n        color: ${({darkMode}) => darkMode ? \"#ffffff\" : \"#333\"};\r\n        opacity: 0.95;\r\n    }\r\n    .avatar svg{\r\n        opacity: 0.3;\r\n    }\r\n    .MuiSvgIcon-root {\r\n        color: #919191 !important;\r\n    }\r\n    .enter__message__Wrapper {\r\n        display: flex;\r\n        position: absolute;\r\n        bottom: 0;\r\n        width: 100%;\r\n        background: ${({darkMode}) => darkMode ? \"var(--dark-grey-color)\" : \"#f0f0f0\"};\r\n        padding: 0.7rem 0.35rem;\r\n    }\r\n    .enter__message__Wrapper form {\r\n        flex: 1;\r\n    }\r\n    .enter__message__Wrapper input {\r\n        border: none;\r\n        border-radius: 25px;\r\n        padding-left: 1rem;\r\n        outline: none;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: ${({darkMode}) => darkMode ? \"#2A3942\" : \"#ffffff\"};\r\n        color: ${({darkMode}) => darkMode ? \"#ffffff\" : \"#333\"};\r\n    }\r\n`;\r\n\r\nexport default Chat;\r\n","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Reducer\\actions.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\Reducer\\reducer.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Nav.js",["100"],"import React from \"react\";\r\nimport Logo from \"../images/whatsapp.svg\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"logo\">\r\n                {/* <img src={Logo} width=\"40\" alt=\"\" /> */}\r\n                <h2>Chatapp</h2>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.nav`\r\n    padding: 0.5rem;\r\n    width: 100%;\r\n    gap: 1rem;\r\n    background-color: var(--primary-color);\r\n    h2 {\r\n        color: #fff;\r\n    }\r\n    .logo {\r\n        max-width: 1100px;\r\n        margin: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 1rem;\r\n    }\r\n`;\r\n\r\nexport default Nav;\r\n","G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Sidebar.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Room.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Message.js",[],["101","102"],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\hooks\\useFetch.js",["103"],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\Profile.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\MultiSidebar.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\NewChat.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\NewGroup.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\util\\DelayUnmount.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\components\\ChatBanner.js",[],"G:\\Development\\Web-Development\\Backend\\Nodejs\\whatsapp-mern\\client\\src\\util\\socket.js",[],["104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":26,"column":3,"nodeType":"112","endLine":26,"endColumn":5,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":80,"column":7,"nodeType":"112","endLine":80,"endColumn":30,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":12},{"ruleId":"106","replacedBy":"120"},{"ruleId":"108","replacedBy":"121"},{"ruleId":"122","severity":2,"message":"123","line":4,"column":16,"nodeType":"118","messageId":"124","endLine":4,"endColumn":24},{"ruleId":"106","replacedBy":"125"},{"ruleId":"108","replacedBy":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'setAuthenticated' and 'setThemeMode'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has a missing dependency: 'selectedChat.newChat'. Either include it or remove the dependency array.",["130"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar",["127"],["128"],"no-undef","'useFetch' is not defined.","undef",["127"],["128"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [setAuthenticated, setThemeMode]",{"range":"135","text":"136"},"Update the dependencies array to be: [selectedChat.newChat, selectedChat.room._id]",{"range":"137","text":"138"},[789,791],"[setAuthenticated, setThemeMode]",[2424,2447],"[selectedChat.newChat, selectedChat.room._id]"]